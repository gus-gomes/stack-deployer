- name: Bootstrap k3d cluster
  become: yes
  block:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Download k3d binary for arm64
      get_url:
        url: https://github.com/rancher/k3d/releases/download/v5.4.6/k3d-linux-arm64
        dest: /usr/local/bin/k3d
        mode: '0755'

    - name: Create k3d cluster
      command: k3d cluster create infra-cluster --kubeconfig-update-default

    - name: Merge kubeconfig
      command: k3d kubeconfig merge infra-cluster --kubeconfig-merge-default
    
    - name: Ensure kubeconfig is updated
      command: export KUBECONFIG=$(k3d kubeconfig write infra-cluster)

    - name: Install kubectl using snap
      community.general.snap:
        name: kubectl
        state: present
        classic: yes

    - name: Download k9s for ARM
      get_url:
        url: "https://github.com/derailed/k9s/releases/download/v0.32.5/k9s_Linux_arm64.tar.gz"
        dest: "/tmp/k9s.tar.gz"

    - name: Extract k9s
      unarchive:
        src: "/tmp/k9s.tar.gz"
        dest: "/usr/local/bin/"
        remote_src: yes

    - name: Ensure k9s is executable
      file:
        path: "/usr/local/bin/k9s"
        mode: '0755'
        state: file

    #- name: Download Terraform for ARM64
    #  get_url:
    #    url: "https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_arm64.zip"
    #    dest: "/tmp/terraform.zip"

    #- name: Unzip Terraform
    #  unarchive:
    #    src: "/tmp/terraform.zip"
    #    dest: "/usr/local/bin/"
    #    remote_src: yes

    #- name: Ensure Terraform is executable
    #  file:
    #    path: "/usr/local/bin/terraform"
    #    mode: '0755'
    #    state: file

   # - name: Verify Terraform installation
   #   command: terraform version
   #   register: terraform_version

    #- name: Display Terraform version
    #  debug:
    #    msg: "Terraform version: {{ terraform_version.stdout }}"